version: "3.9"

services:
  onboarding-db:
    image: postgres:latest
    container_name: onboarding-service-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: onboardingdb
    ports:
      - "5433:5432"  # Host:Container
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - onboarding-net

  onboarding-service:
    build:
      context: ./onboarding-service
      dockerfile: Dockerfile
    container_name: onboarding-service
    restart: always
    depends_on:
      onboarding-db:
        condition: service_healthy
    environment:
      # Use docker profile
      SPRING_PROFILES_ACTIVE: docker

      # Master DB connection (internal Docker network)
      SPRING_DATASOURCE_URL: jdbc:postgresql://onboarding-db:5432/onboardingdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres

      # Tenant DB configuration (internal Docker network)
      TENANT_DB_HOST: onboarding-db
      TENANT_DB_PORT: 5432
      TENANT_DB_USERNAME: postgres
      TENANT_DB_PASSWORD: postgres

      # Email
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    ports:
      - "4000:4000"
    networks:
      - onboarding-net

networks:
  onboarding-net:
    driver: bridge

volumes:
  postgres_data: