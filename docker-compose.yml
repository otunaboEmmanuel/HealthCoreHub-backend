version: "3.9"

# ============================================
# VOLUMES (Maven cache for faster rebuilds)
# ============================================
volumes:
  maven-repo:
    driver: local
  onboarding_postgres_data:
    driver: local
  auth_postgres_data:
    driver: local
  hospital_uploads:  # ← ADD THIS
    driver: local

# ============================================
# NETWORKS
# ============================================
networks:
  healthcare-network:
    driver: bridge

services:
  # ============================================
  # DATABASES
  # ============================================

  onboarding-db:
    image: postgres:latest
    container_name: onboarding-service-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: onboardingdb
    ports:
      - "5433:5432"
    volumes:
      - onboarding_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4

  auth-db:
    image: postgres:latest
    container_name: auth-service-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdb
    ports:
      - "5434:5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4

  # ============================================
  # MICROSERVICES
  # ============================================

  onboarding-service:
    build:
      context: ./onboarding-service
      dockerfile: Dockerfile
      network: host
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: onboarding-service
    restart: always
    depends_on:
      onboarding-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://onboarding-db:5432/onboardingdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      TENANT_DB_HOST: onboarding-db
      TENANT_DB_PORT: 5432
      TENANT_DB_USERNAME: postgres
      TENANT_DB_PASSWORD: postgres
      AUTH_SERVICE_URL: http://auth-service:4001
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    expose:
      - "4000"
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
      network: host
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: auth-service
    restart: always
    depends_on:
      auth-db:
        condition: service_healthy
      onboarding-db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/authdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      TENANT_DB_HOST: onboarding-db
      TENANT_DB_PORT: 5432
      TENANT_DB_USERNAME: postgres
      TENANT_DB_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 86400000
      JWT_REFRESH_EXPIRATION: 604800000
    expose:
      - "4001"
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4001/api/auth/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  hospital-service:
    build:
      context: ./hospital-service
      dockerfile: Dockerfile
      network: host
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: hospital-service
    restart: always
    depends_on:
      - onboarding-db
      - auth-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      AUTH_SERVICE_URL: http://auth-service:4001
      TENANT_DB_HOST: onboarding-db
      TENANT_DB_PORT: 5432
      TENANT_DB_USERNAME: postgres
      TENANT_DB_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
      FILE_UPLOAD_DIRECTORY: /app/uploads
    volumes: # ← ADD THIS SECTION
      - hospital_uploads:/app/uploads
    expose:
      - "4002"
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4002/api/users/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  appointment-service:
    build:
      context: ./appointment-service
      dockerfile: Dockerfile
      network: host
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: appointment-service
    restart: always
    depends_on:
      - onboarding-db
    environment:
      SPRING_PROFILES_ACTIVE: docker
      TENANT_DB_HOST: onboarding-db
      TENANT_DB_PORT: 5432
      TENANT_DB_USERNAME: postgres
      TENANT_DB_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    expose:
      - "4005"
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4002/api/users/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
  # ============================================
  # API GATEWAY (PUBLIC FACING)
  # ============================================

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
      network: host
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: gateway-service
    restart: always
    depends_on:
      - onboarding-service
      - auth-service
      - hospital-service
      - appointment-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      ONBOARDING_SERVICE_URL: http://onboarding-service:4000
      AUTH_SERVICE_URL: http://auth-service:4001
      HOSPITAL_SERVICE_URL: http://hospital-service:4002
      APPOINTMENT_SERVICE_URL: http://hospital-service:4005
    ports:
      - "4004:4004"
    networks:
      - healthcare-network
    dns:
      - 8.8.8.8
      - 8.8.4.4
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4004/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s